{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Premiers pas avec Python","text":"<p>On s'int\u00e9resse dans ce TP \u00e0 la programmation en Python.</p> <p> </p> <p>Python s'affiche encore cette ann\u00e9e comme un des langages pr\u00e9f\u00e9r\u00e9s (si ce n'est le pr\u00e9f\u00e9r\u00e9) des utilisateurs :</p> <p> </p>"},{"location":"#decouvrir-lenvironnement","title":"D\u00e9couvrir l'environnement","text":""},{"location":"#thonny","title":"Thonny","text":"<p>Pour programmer en Python, on peut utiliser le logiciel Thonny qui poss\u00e8de une interface simpliste :</p> <p> </p> <p>Il poss\u00e8de deux zones principales qui ont chacune un r\u00f4le essentiel :</p> <ul> <li>la zone de script (la zone sup\u00e9rieure) : o\u00f9 on \u00e9crit des codes complets ;</li> <li>la console (la zone inf\u00e9rieure) : o\u00f9 on \u00e9crit des instructions et o\u00f9 on y obtient des r\u00e9sultats.</li> </ul>"},{"location":"#premieres-instructions","title":"Premi\u00e8res instructions","text":"<p>La console est une calculatrice g\u00e9ante qui permet la r\u00e9alisation de calculs assez cons\u00e9quent. Python sait g\u00e9rer :</p> <ul> <li>les additions avec l'op\u00e9rateur <code>+</code> ;</li> <li>les soustractions avec l'op\u00e9rateur <code>-</code> ;</li> <li>les multiplications avec l'op\u00e9rateur <code>*</code> ;</li> <li>les divisions avec l'op\u00e9rateur <code>/</code> ;</li> <li>les puissances avec l'op\u00e9rateur <code>**</code>.</li> </ul> <p>Pour commencer</p> <ol> <li>Dans la console, taper <code>1+2*3</code> et v\u00e9rifier que vous obtenez bien <code>7</code>.</li> <li>Pour avoir le r\u00e9sultat de l'expression \\(2\\times 3^2-4\\times\\frac{20}{3}\\), taper <code>2*3**2-4*20/3</code>.</li> <li>Taper l'instruction <code>2024**200</code> pour observer la valeur de \\(2024^{200}\\).</li> </ol> <p>Si vous devez utiliser d'autres fonctions comme la racine carr\u00e9e, il vous faut l'importer depuis le module maths</p> <p>D'autres fonctions</p> <ol> <li>Dans la console, taper <code>from math import sqrt</code> pour importer la racine carr\u00e9e.</li> <li>V\u00e9rifier que l'instruction <code>sqrt(36)</code> vous renvoie bien <code>6.0</code></li> <li>V\u00e9rifier que l'instruction <code>sqrt(2)**2</code> ne renvoie pas <code>2.0</code> comme cela aurait d\u00fb se produire.</li> </ol>"},{"location":"#utiliser-des-scripts","title":"Utiliser des scripts","text":"<p>Dans la zone de script, il est possible de d\u00e9finir ses propres fonctions puis de les utiliser dans la console.</p> <p> </p> <p>Commencer par t\u00e9l\u00e9charger le fichier script1.py, puis l'ouvrir avec Thonny. Ce script permet de d\u00e9finir une fonction appel\u00e9e f et d\u00e9finie par </p> \\[ f(x) = 2x-4 \\] <p>Apr\u00e8s avoir ex\u00e9cuter le script \u00e0 l'aide de , taper dans la console <code>f(5)</code>, puis <code>f(2)</code> et enfin <code>f(f(3)-1)</code>.</p> <p>D\u00e9finir ses fonctions</p> <p>Dans le m\u00eame script qu'au dessus, d\u00e9finir les fonctions :</p> <ol> <li>\\(g\\) d\u00e9finie par \\(g(x) = x^2-3x+1\\) ;</li> <li>\\(h\\) d\u00e9finie par \\(h(x) = \\dfrac{2x+6}{3x-2}\\) ;</li> <li>\\(i\\) d\u00e9finie par \\(i(x) = \\sqrt{6x^2-2}\\).</li> </ol> <p>V\u00e9rifier alors que les instructions <code>g(4)</code>, <code>h(4)</code> et <code>i(1)</code> fournissent les valeurs <code>5</code>, <code>1.2</code> et <code>2.0</code>.</p>"},{"location":"#pour-aller-plus-loin","title":"Pour aller plus loin","text":""},{"location":"#utiliser-dautres-objets","title":"Utiliser d'autres objets","text":"<p>Python sait \u00e9galement manipuler des cha\u00eenes de caract\u00e8res et des listes d'\u00e9l\u00e9ments.</p> <p>Quelques tests</p> <ol> <li>Dans la console, taper <code>c = \"Lyc\u00e9e Colbert\"</code> puis valider avec Entr\u00e9e.</li> <li>Tester les instructions <code>c+c</code> ou encore <code>4*c</code>.</li> <li>Tester les instructions <code>len(c)</code> puis <code>c.count('e')</code>.</li> </ol> <p>Une liste d'\u00e9l\u00e9ments se d\u00e9finie \u00e0 l'aide de crochets <code>[]</code> comme dans l'instruction <code>L = [22, 7, 87]</code>.</p> <p>Tests sur les listes</p> <ol> <li>V\u00e9rifier que <code>len(L)</code> renvoie <code>3</code>.</li> <li>Tester les instructions <code>L[0]</code>, <code>L[1]</code> et <code>L[2]</code>.</li> <li>Tester les instructions <code>L.append(2024)</code> et observer le  changement sur la liste <code>L</code>.</li> </ol>"},{"location":"#le-bloc-conditionnel","title":"Le bloc conditionnel","text":"<p>En Python, il est possible de r\u00e9aliser des actions diff\u00e9rentes suivant qu'une condition soit vraie ou fausse. On r\u00e9alise cela \u00e0 l'aide d'un bloc conditionnel <code>if ... else ...</code>.</p> <p>Commencer par t\u00e9l\u00e9charger le fichier script2.py, puis l'ouvrir avec Thonny. Ce script d\u00e9finie deux fonctions :</p> <ul> <li>une fonction IMC qui calcule l'IMC d'une personne ;</li> <li>une fonction avis_IMC qui commente l'IMC d'une personne.</li> </ul> <p>On rappelle que l'IMC est l'indice de masse corporelle est que l'on a :</p> <p> </p> <p>Script IMC</p> <ol> <li>Compl\u00e9ter la fonction <code>IMC</code> \u00e0 l'aide de la formule ;</li> <li>Compl\u00e9ter la fonction <code>avis_IMC</code> \u00e0 l'aide du graphique.</li> <li>V\u00e9rifier l'avis d'IMC d'une personne mesurant 1.75m et pesant 82kg.</li> </ol>"}]}